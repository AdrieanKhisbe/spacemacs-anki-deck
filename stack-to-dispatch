
# Unimpaired bindings
# Â§TODO: merge previous, next
[ SPC	Insert space above
] SPC	Insert space below
[ b	Go to previous buffer
] b	Go to next buffer
[ f	Go to previous file in directory
] f	Go to next file in directory
[ l	Go to the previous error
] l	Go to the next error
[ h	Go to the previous vcs hunk
] h	Go to the next vcs hunk
[ q	Go to the previous error
] q	Go to the next error
[ t	Go to the previous frame
] t	Go to the next frame
[ w	Go to the previous window
] w	Go to the next window
[ e	Move line up
] e	Move line down
[ p	Paste above current line
] p	Paste below current line
g p	Select pasted text


Key Binding	Description
SPC s b	search with the first found tool
SPC s B	search with the first found tool with default input
SPC s a b	ag
SPC s a B	ag with default text
SPC s g b	grep
SPC s g B	grep with default text
SPC s k b	ack
SPC s k B	ack with default text
SPC s t b	pt
SPC s t B	pt with default text
Searching in files in an arbitrary directory

Key Binding	Description
SPC s f	search with the first found tool
SPC s F	search with the first found tool with default input
SPC s a f	ag
SPC s a F	ag with default text
SPC s g f	grep
SPC s g F	grep with default text
SPC s k f	ack
SPC s k F	ack with default text
SPC s t f	pt
SPC s t F	pt with default text
Searching in a project

Key Binding	Description
SPC / or SPC s p	search with the first found tool
SPC * or SPC s P	search with the first found tool with default input
SPC s a p	ag
SPC s a P	ag with default text
SPC s g p	grep with default text
SPC s k p	ack
SPC s k P	ack with default text
SPC s t p	pt
SPC s t P	pt with default text

## Lisp Keybindings

Key Binding	Function
SPC k %	evil jump item
SPC k :	ex command
SPC k (	insert expression before (same level as current one)
SPC k )	insert expression after (same level as current one)
SPC k $	go to the end of current sexp
SPC k ` k	hybrid version of push sexp (can be used in non lisp dialects)
SPC k ` p	hybrid version of push sexp (can be used in non lisp dialects)
SPC k ` s	hybrid version of slurp sexp (can be used in non lisp dialects)
SPC k ` t	hybrid version of transpose sexp (can be used in non lisp dialects)
SPC k 0	go to the beginning of current sexp
SPC k a	absorb expression
SPC k b	forward barf expression
SPC k B	backward barf expression
SPC k c	convolute expression
SPC k ds	delete symbol
SPC k Ds	backward delete symbol
SPC k dw	delete word
SPC k Dw	backward delete word
SPC k dx	delete expression
SPC k Dx	backward delete expression
SPC k e	unwrap current expression and kill all symbols after point
SPC k E	unwrap current expression and kill all symbols before point
SPC k h	previous symbol
SPC k H	go to previous sexp
SPC k i	switch to insert state
SPC k I	go to beginning of current expression and switch to insert state
SPC k j	next closing parenthesis
SPC k J	join expression
SPC k k	previous opening parenthesis
SPC k l	next symbol
SPC k L	go to next sexp
SPC k p	paste after
SPC k P	paste before
SPC k r	raise expression (replace parent expression by current one)
SPC k s	forward slurp expression
SPC k S	backward slurp expression
SPC k t	transpose expression
SPC k u	undo
SPC k U	got to parent sexp backward
SPC k C-r	redo
SPC k v	switch to visual state
SPC k V	switch to visual line state
SPC k C-v	switch to visual block state
SPC k w	wrap expression with parenthesis
SPC k W	unwrap expression
SPC k y	copy expression
Emacs lisp specific key bindings
Key Binding	Function
SPC m e $	go to end of line and evaluate last sexp
SPC m e b	evaluate buffer
SPC m e c	evaluate current form (a def or a set)
SPC m e e	evaluate last sexp
SPC m e f	evaluate current defun
SPC m e l	go to end of line and evaluate last sexp
SPC m e r	evaluate region
Key Binding	Function
SPC m g g	go to definition
SPC m g G	go to definition in another window
SPC m h h	describe elisp thing at point (show documentation)
SPC m t b	execute buffer tests
SPC m t q	ask for test function to execute